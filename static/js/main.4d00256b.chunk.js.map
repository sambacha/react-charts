{"version":3,"sources":["serviceWorker.js","reducer/tabs.reducer.js","mockData.js","reducer/variables.reducer.js","reducer/chart.reducer.js","helpers/fetchValuesForPieChart.js","reducer/chartValues.reducer.js","reducer/chartForm.reducer.js","store/rootReducers.js","store/index.js","components/CheckboxField.js","selectors/variables.selector.js","modules/ChartEditor/ControlCenterPanel/PlottedVariableList.js","components/SelectField.js","components/TextField.js","components/NumberField.js","components/ButtonField.js","selectors/chart.selector.js","modules/ChartEditor/ControlCenterPanel/ChartForm.js","modules/ChartEditor/ControlCenterPanel/ControCenterPanel.js","selectors/tabs.selector.js","modules/ChartEditor/ChartTab/TabItemPopover.js","components/PopoverButton.js","modules/ChartEditor/ChartTab/TabItem.js","modules/ChartEditor/ChartTab/ChartTab.js","modules/ChartEditor/ChartCarbon/ChartCarbon.js","modules/ChartEditor/ChartCenterPanel.js","modules/ChartEditor/VariablePanel/VariableList.js","modules/ChartEditor/VariablePanel/VariablePanel.js","modules/ChartEditor/ChartEditor.js","components/Heading.js","components/Header.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","LOAD_INITIAL_STATE","RESTORE_STATE","getAllState","getState","variables","chart","chartForm","chartValues","setTabOption","tabId","optionName","value","type","payload","initialState","tabArray","tabById","999","id","name","reRenderId","state","options","legend","tooltip","activeTabId","full_name","version","is_meter","simulation_id","chartPie","chart_data","chart_name","created_at","updated_at","SET_UNITS","fetchMock","data","a","Promise","resolve","setTimeout","fetchVariables","dispatch","res","units","uniq","map","item","setFilter","defaultVariables","filter","plottedVariable","selectedPlottedVariable","reducer","variable","toLowerCase","indexOf","newPlotted","newSelectedPlotted","findMatchingVariableValue","dateTime","variableValues","find","variableValue","month","date","hour","minute","variableDate","Date","datetime","matchingDate","getFullYear","isNumber","Number","getMonth","getDate","getHours","getMinutes","getTime","fetchValuesForPieChart","values","chartData","labels","forEach","max_datetime","max_value","min_datetime","min_value","output_variable_id","push","group","Math","random","bgColor","setChartValues","CLEAR_FORM","startDate","endDate","maximumDatePoints","steps","maxDate","minDate","isSubmitting","error","reducers","combineReducers","variablesReducer","tabs","_","uniqueId","now","saveState","chartReducer","formValues","chartValuesReducer","composeEnhancers","compose","store","createStore","rootReducers","applyMiddleware","thunk","CheckboxField","labelText","onChange","color","textEllipsis","props","CheckStyled","Checkbox","styled","div","css","variablesSelector","createSelector","plottedVariablesSelector","selectedPlottedSelector","PlottedVariableList","plottedVariables","useSelector","TitleStyled","SelectedStyled","key","toString","defaultChecked","disabled","onClick","console","log","SelectField","children","width","SelectStyled","Select","light","TextField","hideLabel","TextStyled","TextInput","defaultValue","NumberField","label","NumberStyled","NumberInput","invalidText","min","step","ButtonField","text","Button","kind","size","chartSelector","chartValuesSelector","chartLabelsSelector","types","ChartForm","useState","datePie","setDatePie","useDispatch","onChangeDate","e","target","DateStyled","idx","SelectItem","placeholder","SectionStyled","ActionField","chartType","length","toast","fetchValuesFn","ControlCenterPanel","ContainerStyled","HeaderStyled","IconStyled","fill","HrStyled","tabByIdSelector","activeTabIdSelector","tabsSelector","chartOptionTabSelector","downloadChart","document","querySelector","chartHtml","innerHTML","canvasElement","createElement","getElementById","appendChild","canvg","link","download","href","toDataURL","click","remove","TabItemPopover","MenuItem","Separator","stopPropagation","Container","button","PopoverStyled","marginTop","height","isShowing","popoverPosition","InputStyled","input","PopoverButton","icon","content","popoverWidth","popoverHeight","autoHidden","className","TabItem","isActive","TabItemContainerStyled","TabNameStyled","tab","nextActiveTabId","tabIndex","nextTab","ChartTab","TabsContainer","tabItem","AddButton","Content","ChartCarbon","chartOptionTab","chartLabels","alignment","enabled","showTotal","pie","scale","ChartCenterPanel","VariablePanel","selectedPlotted","handleToggleVariable","checkboxName","VariableStyled","FilterStyled","onFilter","Search","placeHolderText","trim","VariableList","variableId","isExists","findIndex","splice","chroma","hex","togglePlottedVariable","ChartEditor","useEffect","Heading","Header","HeaderLogo","App","configure","ReactDOM","render","basename","exact","path","component","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4d00256b.chunk.js","sourcesContent":["/*eslint no-useless-concat: 0*/\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import _ from 'lodash';\n\nimport { fetchVariables } from './variables.reducer';\n\n// TYPES\nconst ADD_TAB = 'TABS/ADD_TAB';\nconst CLOSE_TAB = 'TABS/CLOSE_TAB';\nconst SET_ACTIVE_TAB = 'TABS/SET_ACTIVE_TAB';\nconst SET_TAB_OPTION = 'TABS/SET_TAB_OPTION';\nconst SAVE_STATE_DATA = 'TABS/SAVE_STATE_DATA';\n\nexport const LOAD_INITIAL_STATE = 'TABS/LOAD_INITIAL_STATE';\nexport const RESTORE_STATE = 'TABS/RESTORE_STATE';\n\n// ACTIONS\n\nexport function loadInitialState() {\n  return {\n    type: LOAD_INITIAL_STATE,\n  };\n}\n\nconst getAllState = (getState) => {\n  const { variables, chart, chartForm, chartValues } = getState();\n  const saveState = {\n    variables,\n    chart,\n    chartForm,\n    chartValues,\n  };\n\n  return saveState;\n};\n\nexport const addTab = () => (dispatch, getState) => {\n  const currentTabId = getState().tabs.activeTabId;\n  const saveState = getAllState(getState);\n\n  dispatch({ type: SAVE_STATE_DATA, payload: { tabId: currentTabId, saveState } });\n  dispatch({ type: ADD_TAB });\n  dispatch({ type: LOAD_INITIAL_STATE });\n  dispatch(fetchVariables(9));\n};\n\nexport const switchTab = (tabId) => (dispatch, getState) => {\n  const tab = getState().tabs.tabById[tabId];\n  const currentTabId = getState().tabs.activeTabId;\n  const saveState = getAllState(getState);\n\n  dispatch({ type: SAVE_STATE_DATA, payload: { tabId: currentTabId, saveState } });\n  dispatch({ type: SET_ACTIVE_TAB, payload: { tabId } });\n  dispatch({ type: RESTORE_STATE, payload: tab.state });\n};\n\nexport const closeTab = (tabId) => (dispatch, getState) => {\n  let nextActiveTabId = null;\n  const tabIndex = getState().tabs.tabArray.indexOf(tabId);\n\n  if (tabIndex > 0) {\n    nextActiveTabId = getState().tabs.tabArray[tabIndex - 1];\n  }\n\n  if (!nextActiveTabId) return;\n\n  const nextTab = getState().tabs.tabById[nextActiveTabId];\n\n  dispatch({ type: SET_ACTIVE_TAB, payload: { tabId: nextActiveTabId } });\n  dispatch({ type: CLOSE_TAB, payload: { tabId } });\n  dispatch({ type: RESTORE_STATE, payload: nextTab.state });\n};\n\nexport function setTabOption(tabId, optionName, value) {\n  return {\n    type: SET_TAB_OPTION,\n    payload: { tabId, optionName, value },\n  };\n}\n\n// REDUCER\nconst initialState = {\n  tabArray: [999],\n  tabById: {\n    999: {\n      id: 999,\n      name: 'Tab 1',\n      reRenderId: 1, // use to reRender\n      state: {},\n      options: {\n        legend: true,\n        tooltip: true,\n      },\n    },\n  },\n  activeTabId: 999,\n};\n\nexport default function reducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case ADD_TAB: {\n      const id = Number(_.uniqueId());\n      const name = `Tab ${id + 1}`;\n      return {\n        ...state,\n        activeTabId: id,\n        tabArray: [...state.tabArray, id],\n        tabById: {\n          ...state.tabById,\n          [id]: {\n            id,\n            name,\n            state: {},\n            options: {\n              legend: true,\n              tooltip: true,\n            },\n          },\n        },\n      };\n    }\n    case SET_ACTIVE_TAB: {\n      return {\n        ...state,\n        activeTabId: payload.tabId,\n      };\n    }\n    case CLOSE_TAB: {\n      const { tabId } = payload;\n      delete state.tabById[tabId];\n\n      return {\n        ...state,\n        tabArray: state.tabArray.filter((id) => id !== tabId),\n        tabById: { ...state.tabById },\n      };\n    }\n    case SET_TAB_OPTION: {\n      const { tabId, optionName, value } = payload;\n      return {\n        ...state,\n        tabById: {\n          ...state.tabById,\n          [tabId]: {\n            ...state.tabById[tabId],\n            reRenderId: Date.now(),\n            options: {\n              ...state.tabById[tabId].options,\n              [optionName]: value,\n            },\n          },\n        },\n      };\n    }\n    case SAVE_STATE_DATA: {\n      const { tabId, saveState } = payload;\n      return {\n        ...state,\n        tabById: {\n          ...state.tabById,\n          [tabId]: {\n            ...state.tabById[tabId],\n            state: saveState,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","export const variables = [\n{\n\t\tfull_name: '211 - Bill of Lading',\n\t\tid: 1,\n\t\ttype: 'X12',\n\t\tversion: 'C'\n\t},\n\t{\n\t\tfull_name: '4010',\n\t\tid: 2,\n\t\ttype: 'X12',\n\t\tversion: 'C'\n\t}, {\n\t\tfull_name: 'D.07A',\n\t\tid: 3,\n\t\ttype: 'EDIFACT',\n\t\tversion: 'C'\n\t}, {\n\t\tfull_name: '[TXID]',\n\t\tid: 4,\n\t\ttype: 'vegetable',\n\t\tversion: 'C'\n\t}, {\n\t\tfull_name: '[TXID]',\n\t\tid: 5,\n\t\ttype: 'X12',\n\t\tversion: 'C'\n\t}, {\n\t\tfull_name: '[TXID]',\n\t\tid: 6,\n\t\ttype: 'X12',\n\t\tversion: 'hr'\n\t}, {\n\t\tfull_name: '[TXID]',\n\t\tid: 7,\n\t\ttype: 'X12',\n\t\tversion: 'hr'\n\t}, {\n\t\tfull_name: '[TXID]',\n\t\tid: 8,\n\t\ttype: 'X12',\n\t\tversion: 'hr'\n\t}, {\n\t\tfull_name: '[TXID]',\n\t\tid: 9,\n\t\ttype: 'X12',\n\t\tversion: 'hr'\n\t}, {\n\t\tfull_name: '[TXID]',\n\t\tid: 10,\n\t\tis_meter: 0,\n\t\tname: '[TXID]',\n\t\tsimulation_id: 9,\n\t\ttype: 'X12',\n\t\tversion: 'hr'\n  }\n ];\n\nexport const chartPie = {\n\tchart_data: '',\n\tchart_name: 'tony pie',\n\tcreated_at: '2020-09-18T15:27:19.000000Z',\n\tid: 9,\n\toptions: {\n\t\tvariables: []\n\t},\n\tvariables: [],\n\ttype: 'pie',\n\tupdated_at: '2020-09-18T15:27:19.000000Z'\n};\n","// libs\nimport { uniq } from 'lodash';\nimport chroma from 'chroma-js';\n\n// helpers\nimport { LOAD_INITIAL_STATE, RESTORE_STATE } from './tabs.reducer';\n\n// mock data\nimport { variables } from 'mockData';\n\n// TYPES\nconst FETCH_VARIABLES_START = 'VARIABLES/FETCH_VARIABLES_START';\nconst FETCH_VARIABLES_SUCCESS = 'VARIABLES/FETCH_VARIABLES_SUCCESS';\nconst SET_UNITS = 'VARIABLES/SET_UNITS';\nconst SET_FILTER_VARIABLE = 'VARIABLES/SET_FILTER_VARIABLE';\nconst RESET_FILTER_VARIABLE = 'VARIABLES/RESET_FILTER_VARIABLE';\nconst TOGGLE_PLOTTED_VARIABLE = 'VARIABLES/TOGGLE_PLOTTED_VARIABLE';\n\n// ACTIONS\nconst fetchMock = async (data) => new Promise((resolve) => setTimeout(resolve(data), 3000));\n\nexport const fetchVariables = () => async (dispatch) => {\n  const res = await fetchMock(variables);\n  const units = uniq(res.map((item) => item.units));\n  dispatch({ type: FETCH_VARIABLES_START });\n\n  dispatch({ type: SET_UNITS, payload: { units } });\n  dispatch({ type: FETCH_VARIABLES_SUCCESS, payload: res });\n};\n\nexport const setFilter = (type, value) => (dispatch) => {\n  dispatch({\n    type: SET_FILTER_VARIABLE,\n    payload: {\n      type,\n      value,\n    },\n  });\n};\n\nexport const resetFilter = () => (dispatch) => {\n  dispatch({ type: RESET_FILTER_VARIABLE });\n};\n\nexport const togglePlottedVariable = (variableId) => (dispatch, getState) => {\n  const { plottedVariable, variables, selectedPlottedVariable } = getState().variables;\n  const variable = variables.filter((item) => item.id === variableId)[0];\n\n  let newPlotted = [...plottedVariable];\n  let newSelectedPlotted = { ...selectedPlottedVariable };\n  const isExists = newPlotted.findIndex((item) => item.id === variableId);\n\n  if (isExists >= 0) {\n    newPlotted.splice(isExists, 1);\n    delete newSelectedPlotted[variableId];\n  } else {\n    newPlotted = [\n      ...newPlotted,\n      {\n        ...variable,\n        bgColor: chroma.random().hex(),\n      },\n    ];\n    newSelectedPlotted = {\n      ...selectedPlottedVariable,\n      [variableId]: true,\n    };\n  }\n\n  dispatch({ type: TOGGLE_PLOTTED_VARIABLE, payload: { newPlotted, newSelectedPlotted } });\n};\n\n// TODO : INITAL STATE \n// @init \n// reducer\nconst initialState = {\n  defaultVariables: [],\n  variables: [],\n  units: [],\n  filter: {},\n  plottedVariable: [],\n  selectedPlottedVariable: {},\n};\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case FETCH_VARIABLES_START: {\n      return {\n        ...state,\n        defaultVariables: [],\n        variables: [],\n      };\n    }\n    case FETCH_VARIABLES_SUCCESS: {\n      return {\n        ...state,\n        defaultVariables: payload,\n        variables: payload,\n      };\n    }\n    case SET_UNITS: {\n      return {\n        ...state,\n        units: payload.units,\n      };\n    }\n    case SET_FILTER_VARIABLE: {\n      const variables = state.defaultVariables.filter((variable) => {\n        let match = true;\n        if (payload.type === 'step' && variable.type.toLowerCase() !== payload.value.toLowerCase()) {\n          match = false;\n        }\n        if (payload.type === 'units' && variable.units.toLowerCase() !== payload.value.toLowerCase()) {\n          match = false;\n        }\n        if (payload.type === 'keyword' && variable.full_name.toLowerCase().indexOf(payload.value.toLowerCase()) === -1) {\n          match = false;\n        }\n        return match;\n      });\n\n      return {\n        ...state,\n        variables,\n        filter: {\n          ...state.filter,\n          [payload.type]: payload.value,\n        },\n      };\n    }\n    case RESET_FILTER_VARIABLE: {\n      return {\n        ...state,\n        variables: state.defaultVariables,\n      };\n    }\n    case TOGGLE_PLOTTED_VARIABLE: {\n      return {\n        ...state,\n        plottedVariable: payload.newPlotted,\n        selectedPlottedVariable: payload.newSelectedPlotted,\n      };\n    }\n    case RESTORE_STATE: {\n      if (payload.variables) {\n        return {\n          ...state,\n          defaultVariables: payload.variables.defaultVariables,\n          variables: payload.variables.variables,\n          selectedPlottedVariable: payload.variables.selectedPlottedVariable,\n          plottedVariable: payload.variables.plottedVariable,\n        };\n      }\n      return state;\n    }\n    case LOAD_INITIAL_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// import * as chartEditor from 'api/chartEditor.api';\n\n// mock api\nimport { chartPie } from 'mockData';\n\n// TYPES\nconst FETCH_CHART_SUCCESS = 'CHART/FETCH_CHART_SUCCESS';\n\n// ACTIONS\n\nexport const fetchChart = () => async (dispatch) => {\n  dispatch({\n    type: FETCH_CHART_SUCCESS,\n    payload: chartPie,\n  });\n};\n\nconst initialState = {};\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case FETCH_CHART_SUCCESS: {\n      return payload;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import isNumber from 'lodash/isNumber';\n\nfunction findMatchingVariableValue(dateTime, variableValues) {\n  return variableValues.find((variableValue) => {\n    const { month, date, hour, minute } = dateTime;\n    const variableDate = new Date(variableValue.datetime);\n    const matchingDate = new Date(\n      variableDate.getFullYear(),\n      isNumber(month) ? Number(month) - 1 : variableDate.getMonth(),\n      isNumber(date) ? Number(date) - 1 : variableDate.getDate(),\n      isNumber(hour) ? Number(hour) - 1 : variableDate.getHours(),\n      isNumber(minute) ? Number(minute) - 1 : variableDate.getMinutes(),\n      0,\n      0,\n    );\n    return variableDate.getTime() === matchingDate.getTime();\n  });\n}\n\nexport default async function fetchValuesForPieChart(getState) {\n  const { values } = getState().chartForm;\n  const { plottedVariable } = getState().variables;\n  const chartData = [];\n  const labels = {};\n\n  plottedVariable.forEach((variable) => {\n    variable.variableValues = [\n      {\n        datetime: 'Fri Sep 25 22:07:49 PDT 2020',\n        max_datetime: null,\n        max_value: null,\n        min_datetime: null,\n        min_value: null,\n        output_variable_id: 1,\n        value: '12.722719046658695',\n      },\n    ];\n  });\n\n  // type simple\n  plottedVariable.forEach((variable) => {\n    const variableValue = findMatchingVariableValue(values, variable.variableValues);\n\n    if (variableValue) {\n      chartData.push({\n        group: variable.full_name,\n        value: Number(variableValue.value * Math.random(1, 100)),\n      });\n      labels[variable.full_name] = variable.bgColor;\n    }\n  });\n\n  return {\n    chartValues: chartData,\n    labels,\n  };\n}\n","import { LOAD_INITIAL_STATE, RESTORE_STATE } from './tabs.reducer';\n\n// TYPES\nconst SET_CHART_VALUES = 'CHART/SET_CHART_VALUES';\n\n// ACTIONS\n\nexport const setChartValues = (chartValues, labels) => async (dispatch) => {\n  // const response = await chartEditor.fetchSingleChart(chartId);\n  // const chart = response.data.data;\n\n  dispatch({\n    type: SET_CHART_VALUES,\n    payload: { chartValues, labels },\n  });\n};\n\nconst initialState = {\n  chartValues: [],\n  labels: {},\n};\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_CHART_VALUES: {\n      return {\n        ...state,\n        chartValues: payload.chartValues,\n        labels: payload.labels,\n      };\n    }\n    case RESTORE_STATE: {\n      if (payload.chartValues) return payload.chartValues;\n      return state;\n    }\n    case LOAD_INITIAL_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import fetchValuesForPieChart from 'helpers/fetchValuesForPieChart';\nimport { toast } from 'react-toastify';\n\nimport { setChartValues } from './chartValues.reducer';\nimport { LOAD_INITIAL_STATE, RESTORE_STATE } from './tabs.reducer';\n\n// TYPES\nconst SET_FORM_VALUE_PIE = 'CHART_FORM/SET_FORM_VALUE_PIE';\nconst CLEAR_FORM = 'CHART_FORM/CLEAR_FORM';\n\n// ACTIONS\n\nexport const submitForm = (formValues) => async (dispatch, getState) => {\n  const { plottedVariable } = getState().variables;\n  const chartType = getState().chart.type;\n  let fetchValuesFn;\n\n  if (plottedVariable.length === 0) {\n    toast('Selected variables must have same type', {\n      type: 'error',\n    });\n    return;\n  }\n\n  if (chartType === 'pie') {\n    fetchValuesFn = fetchValuesForPieChart;\n    dispatch({ type: SET_FORM_VALUE_PIE, payload: { formValues } });\n  }\n\n  const { chartValues, labels } = await fetchValuesFn(getState);\n\n  dispatch(setChartValues(chartValues, labels));\n};\n\nexport const clearForm = () => async (dispatch) => {\n  dispatch({ type: CLEAR_FORM });\n};\n\nexport const CHART_FORM_STEPS = ['daily', 'weekly', 'monthly'];\n\nconst initialState = {\n  values: {\n    // startDate: new Date(2001, 1, 1),\n    // endDate: new Date(2002, 2, 2),\n    startDate: '',\n    endDate: '',\n    maximumDatePoints: 0,\n    steps: CHART_FORM_STEPS[0],\n    maxDate: '',\n    minDate: '',\n    date: '',\n    month: '',\n    hour: '',\n    minute: '',\n  },\n  isSubmitting: false,\n  error: '',\n};\n\nexport default function reducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case SET_FORM_VALUE_PIE: {\n      const { formValues } = payload;\n      return {\n        ...state,\n        values: {\n          ...state.values,\n          date: formValues.date || '',\n          month: formValues.month || '',\n          hour: formValues.hour || '',\n          minute: formValues.minute || '',\n        },\n      };\n    }\n    case CLEAR_FORM: {\n      return initialState;\n    }\n    case RESTORE_STATE: {\n      if (payload.chartForm) {\n        return payload.chartForm;\n      }\n      return state;\n    }\n    case LOAD_INITIAL_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\n// reducers\nimport variablesReducer from 'reducer/variables.reducer';\nimport tabsReducer from 'reducer/tabs.reducer';\nimport chartReducer from 'reducer/chart.reducer';\nimport chartFormReducer from 'reducer/chartForm.reducer';\nimport chartValuesReducer from 'reducer/chartValues.reducer';\n\nconst reducers = combineReducers({\n  variables: variablesReducer,\n  tabs: tabsReducer,\n  chart: chartReducer,\n  chartForm: chartFormReducer,\n  chartValues: chartValuesReducer,\n});\n\nexport default reducers;\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n// rootReducers;\nimport rootReducers from './rootReducers';\n\n// config redux dev tool\nconst composeEnhancers = process.env.NODE_ENV === 'development' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n// carbon core\nimport { Checkbox } from 'carbon-components-react';\n\nconst CheckboxField = ({ id, labelText, onChange, bgColor, color, textEllipsis = false, ...props }) => {\n  return (\n    <CheckStyled bgColor={bgColor} color={color} textEllipsis={textEllipsis}>\n      <Checkbox id={id} labelText={labelText} onChange={onChange} {...props} />\n    </CheckStyled>\n  );\n};\n\nexport default CheckboxField;\n\nconst CheckStyled = styled.div`\n  background-color: ${(props) => props.bgColor || '#fff'};\n\n  .bx--form-item {\n    overflow: hidden;\n    width: 100%;\n  }\n  .bx--checkbox-label {\n    width: 100%;\n    padding-left: 28px;\n  }\n  .bx--checkbox-label-text {\n    color: ${(props) => props.color || 'var(--cds-text-01, #152935)'};\n    width: 100%;\n    display: block;\n\n    ${(props) =>\n      props.textEllipsis &&\n      css`\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n      `}\n  }\n\n  .bx--checkbox:checked + .bx--checkbox-label::before,\n  .bx--checkbox:indeterminate + .bx--checkbox-label::before,\n  .bx--checkbox-label[data-contained-checkbox-state='true']::before,\n  .bx--checkbox-label[data-contained-checkbox-state='mixed']::before {\n    background-color: #3d70b2;\n    border-color: #3d70b2;\n    border-width: 1px;\n    box-shadow: 0 0 0 0 transparent;\n  }\n  .bx--checkbox:focus + .bx--checkbox-label::before,\n  .bx--checkbox-label__focus::before,\n  .bx--checkbox:checked:focus + .bx--checkbox-label::before,\n  .bx--checkbox-label[data-contained-checkbox-state='true'].bx--checkbox-label__focus::before,\n  .bx--checkbox:indeterminate:focus + .bx--checkbox-label::before,\n  .bx--checkbox-label[data-contained-checkbox-state='mixed'].bx--checkbox-label__focus::before {\n    box-shadow: 0 0 0 0 transparent;\n  }\n  .bx--form-item.bx--checkbox-wrapper:first-of-type,\n  .bx--form-item.bx--checkbox-wrapper:last-of-type {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\n","import { createSelector } from 'reselect';\n\nexport const variablesSelector = createSelector(\n  (state) => state.variables,\n  (variables) => variables.variables,\n);\n\nexport const unitsSelector = createSelector(\n  (state) => state.variables,\n  (variables) => variables.units,\n);\n\nexport const filterSelector = createSelector(\n  (state) => state.variables,\n  (variables) => variables.filter,\n);\n\nexport const plottedVariablesSelector = createSelector(\n  (state) => state.variables,\n  (variables) => variables.plottedVariable,\n);\n\nexport const selectedPlottedSelector = createSelector(\n  (state) => state.variables,\n  (variables) => variables.selectedPlottedVariable,\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\n// components\nimport CheckboxField from 'components/CheckboxField';\n\nimport { plottedVariablesSelector } from 'selectors/variables.selector';\n\nconst PlottedVariableList = () => {\n  const plottedVariables = useSelector(plottedVariablesSelector);\n\n  return (\n    <>\n      <TitleStyled>Selected Variables / Sections</TitleStyled>\n      <SelectedStyled>\n        {plottedVariables.map((variable) => (\n          <CheckboxField\n            key={variable.id}\n            id={`section-${variable.id.toString()}`}\n            labelText={variable.full_name}\n            defaultChecked\n            disabled\n            onClick={() => console.log('click')}\n            bgColor={variable.bgColor}\n            color=\"#fff\"\n            textEllipsis\n          />\n        ))}\n      </SelectedStyled>\n    </>\n  );\n};\n\nexport default PlottedVariableList;\n\nconst TitleStyled = styled.div`\n  text-align: left;\n  font-size: 14px;\n  font-weight: bold;\n  color: #152935;\n`;\n\nconst SelectedStyled = styled.div`\n  width: 100%;\n  height: 56vh;\n  overflow-y: auto;\n  color: #5a6872;\n  font-size: 14px;\n  margin: 20px 0 15px 0;\n  padding-right: 10px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// carbon core\nimport { Select } from 'carbon-components-react';\n\nexport default function SelectField({ id, labelText, children, width, onChange }) {\n  return (\n    <SelectStyled width={width}>\n      <Select light id={id} labelText={labelText} onChange={onChange}>\n        {children}\n      </Select>\n    </SelectStyled>\n  );\n}\n\nconst SelectStyled = styled.div`\n  width: ${(props) => props.width || '100%'};\n\n  .bx--label {\n    text-align: left;\n    font-size: 14px;\n    font-weight: bold;\n    color: #152935;\n  }\n  .bx--select-input {\n    text-transform: capitalize;\n  }\n  .bx--select,\n  .bx--select-input__wrapper {\n    width: 100%;\n  }\n`;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n// carbon core\nimport { TextInput } from 'carbon-components-react';\n\nexport default function TextField({ id, value, labelText, width, hideLabel, ...props }) {\n  return (\n    <TextStyled width={width} hideLabel={hideLabel}>\n      <TextInput light id={id} labelText={labelText} defaultValue={value} {...props} />\n    </TextStyled>\n  );\n}\n\nconst TextStyled = styled.div`\n  width: ${(props) => props.width || '100%'};\n\n  ${(props) =>\n    props.hideLabel &&\n    css`\n      .bx--label {\n        opacity: 0;\n      }\n    `}\n\n  .bx--label {\n    text-align: left;\n    font-size: 14px;\n    font-weight: bold;\n    color: #152935;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// carbon core\nimport { NumberInput } from 'carbon-components-react';\n\nexport default function NumberField({ id, value, name, label, onChange, width }) {\n  return (\n    <NumberStyled width={width}>\n      <NumberInput id={id} name={name} invalidText=\"Number is not valid\" label={label} min={0} step={1} value={value} onChange={onChange} />\n    </NumberStyled>\n  );\n}\n\nconst NumberStyled = styled.div`\n  width: ${(props) => props.width || '100%'};\n  .bx--label {\n    text-align: left;\n    font-size: 14px;\n    font-weight: bold;\n    color: #152935;\n  }\n  .bx--number input[type='number'] {\n    min-width: ${(props) => props.width || '100%'};\n  }\n`;\n","import React from 'react';\n\n// carbon core\nimport { Button } from 'carbon-components-react';\n\nexport default function ButtonField({ text, onClick }) {\n  return (\n    <Button kind=\"tertiary\" size=\"field\" onClick={onClick}>\n      {text}\n    </Button>\n  );\n}\n","import { createSelector } from 'reselect';\n\nexport const chartSelector = (state) => state.chart;\n\nexport const chartValuesSelector = createSelector(\n  (state) => state.chartValues,\n  (chartValues) => chartValues.chartValues,\n);\n\nexport const chartLabelsSelector = createSelector(\n  (state) => state.chartValues,\n  (chartValues) => chartValues.labels,\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\n// carbon core\nimport { SelectItem } from 'carbon-components-react';\n\n// components\nimport SelectField from 'components/SelectField';\nimport TextField from 'components/TextField';\nimport NumberField from 'components/NumberField';\nimport ButtonField from 'components/ButtonField';\n\n// actions\nimport { submitForm, clearForm } from 'reducer/chartForm.reducer';\n\n// selectors\nimport { chartSelector } from 'selectors/chart.selector';\n\nconst types = ['Simple', 'Two level'];\n\nconst ChartForm = () => {\n  const [datePie, setDatePie] = useState({});\n  const dispatch = useDispatch();\n  const chart = useSelector(chartSelector);\n\n  const handleApply = () => {\n    dispatch(submitForm(datePie));\n  };\n\n  const handleClear = () => {\n    dispatch(clearForm());\n  };\n\n  const onChangeDate = (e, type) => {\n    setDatePie({\n      ...datePie,\n      [type]: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <DateStyled>\n        <SelectField id=\"select-variables-type\" labelText=\"Type\" width=\"33%\">\n          {types.map((item, idx) => (\n            <SelectItem key={idx} value={item} text={item} />\n          ))}\n        </SelectField>\n        <TextField id=\"text-month-field\" type=\"number\" placeholder=\"mm\" labelText=\"Date\" name=\"month\" width=\"65px\" onChange={(e) => onChangeDate(e, 'month')} />\n        <TextField id=\"text-day-field\" type=\"number\" placeholder=\"dd\" labelText=\"day\" name=\"day\" width=\"65px\" hideLabel onChange={(e) => onChangeDate(e, 'date')} />\n        <TextField id=\"text-day-field\" type=\"number\" placeholder=\"hh\" labelText=\"Time\" name=\"day\" width=\"65px\" onChange={(e) => onChangeDate(e, 'hour')} />\n        <TextField id=\"text-day-field\" type=\"number\" placeholder=\"mm\" labelText=\"minute\" name=\"day\" width=\"65px\" hideLabel onChange={(e) => onChangeDate(e, 'minute')} />\n      </DateStyled>\n      <SectionStyled>\n        {chart.type === 'pie' ? null : <NumberField id=\"number-section-field\" label=\"Sections\" value={0} width=\"100px\" />}\n        <ActionField>\n          <ButtonField text=\"Apply\" onClick={handleApply} />\n          <ButtonField text=\"Reset\" onClick={handleClear} />\n        </ActionField>\n      </SectionStyled>\n    </>\n  );\n};\n\nexport default ChartForm;\n\nconst DateStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div + div {\n    margin-left: 3px;\n  }\n`;\n\nconst SectionStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n`;\n\nconst ActionField = styled.div`\n  display: flex;\n  align-self: flex-end;\n\n  button + button {\n    margin-left: 10px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// carbon icon\nimport CloseIcon from '@carbon/icons-react/es/close/16';\n\n// components\n\nimport PlottedVariableList from './PlottedVariableList';\nimport ChartForm from './ChartForm';\n\nconst ControlCenterPanel = () => {\n  return (\n    <ContainerStyled>\n      <HeaderStyled>\n        <span>Transaction Explorer</span>\n        <IconStyled>\n          <CloseIcon fill=\"var(--cds-text-02,#525252)\" />\n        </IconStyled>\n      </HeaderStyled>\n\n      <ChartForm />\n\n      <HrStyled />\n\n      <PlottedVariableList />\n    </ContainerStyled>\n  );\n};\n\nexport default ControlCenterPanel;\n\nconst ContainerStyled = styled.div`\n  width: 440px;\n  height: 100%;\n  padding: 20px 15px 0;\n  background: #ffffff 0% 0% no-repeat padding-box;\n  box-shadow: 2px 2px 10px #d9ebfd;\n  z-index: 1;\n`;\n\nconst HeaderStyled = styled.div`\n  position: relative;\n  text-align: center;\n  text-transform: capitalize;\n  color: #5a6872;\n  padding-bottom: 30px;\n`;\n\nconst IconStyled = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 0;\n  cursor: pointer;\n`;\n\nconst HrStyled = styled.div`\n  margin: 20px -15px;\n  border-top: 1px solid #cfd0d1;\n`;\n","import { createSelector } from 'reselect';\n\nconst tabByIdSelector = (state) => state.tabs.tabById;\nconst tabArraySelector = (state) => state.tabs.tabArray;\nexport const activeTabIdSelector = (state) => state.tabs.activeTabId;\n\nexport const tabsSelector = createSelector(tabByIdSelector, tabArraySelector, (tabById, tabArray) => tabArray.map((id) => tabById[id]));\n\nexport const chartOptionTabSelector = createSelector(tabByIdSelector, activeTabIdSelector, (tabById, activeTabId) => tabById[activeTabId]);\n","import React from 'react';\nimport styled from 'styled-components';\nimport canvg from 'canvg';\nimport { useDispatch } from 'react-redux';\n\n// components\nimport CheckboxField from 'components/CheckboxField';\n\n// actions\nimport { setTabOption } from 'reducer/tabs.reducer';\n\nfunction downloadChart() {\n  const chart = document.querySelector('.recharts-wrapper');\n  if (!chart) return;\n  const chartHtml = chart.innerHTML;\n  const canvasElement = document.createElement('canvas');\n  canvasElement.id = 'canvas';\n  document.getElementById('root').appendChild(canvasElement);\n  canvg('canvas', chartHtml);\n  const link = document.createElement('a');\n  link.download = 'chart.png';\n  link.href = canvasElement.toDataURL('image/png');\n  link.click();\n  setTimeout(() => {\n    canvasElement.remove();\n  });\n}\n\nconst TabItemPopover = ({ tabId, options }) => {\n  const dispatch = useDispatch();\n\n  function toggleLegend(e) {\n    e.stopPropagation();\n    dispatch(setTabOption(tabId, 'legend', !options.legend));\n  }\n\n  function toggleTooltip(e) {\n    e.stopPropagation();\n    dispatch(setTabOption(tabId, 'tooltip', !options.tooltip));\n  }\n\n  return (\n    <>\n      <MenuItem>Send to View...</MenuItem>\n      <MenuItem onClick={downloadChart}>Export...</MenuItem>\n      <Separator />\n      <MenuItem>\n        <CheckboxField id={`toggle-chart-tooltip-${tabId}`} labelText=\"Tooltip\" defaultChecked={options.tooltip} onClick={toggleTooltip} />\n      </MenuItem>\n      <MenuItem>\n        <CheckboxField id={`toggle-chart-legend-${tabId}`} labelText=\"Legend\" defaultChecked={options.legend} onClick={toggleLegend} />\n      </MenuItem>\n    </>\n  );\n};\n\nexport default TabItemPopover;\n\nconst MenuItem = styled.div`\n  padding: 7px 15px;\n`;\n\nconst Separator = styled.div`\n  height: 1px;\n  margin: 5px 0;\n  background: rgba(0, 0, 0, 0.1);\n`;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n`;\n\nconst Button = styled.button`\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n  background: transparent;\n  border: none;\n`;\n\nexport const Popover = styled.div`\n  position: absolute;\n  padding: 10px 0;\n  right: -18px;\n  top: 100%;\n  margin-top: ${(props) => props.marginTop || '10px'};\n  width: ${(props) => props.width || 'max-content'};\n  height: ${(props) => props.height || 'max-content'};\n  background: white;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  display: none;\n\n  ${(props) =>\n    props.isShowing &&\n    css`\n      display: block;\n    `}\n\n  &:after {\n    position: absolute;\n    top: -4px;\n    right: 22px;\n    content: '';\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-bottom: 5px solid white;\n  }\n\n  &:before {\n    position: absolute;\n    top: -5px;\n    right: 22px;\n    content: '';\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-bottom: 5px solid #dde2e6;\n  }\n\n  ${(props) =>\n    props.popoverPosition &&\n    props.popoverPosition === 'left' &&\n    css`\n      right: unset;\n      left: -15px;\n\n      &:after {\n        right: unset;\n        left: 18px;\n      }\n\n      &:before {\n        right: unset;\n        left: 18px;\n      }\n    `}\n`;\n\nconst PopoverStyled = styled.div`\n  position: absolute;\n  right: -15px;\n  top: 100%;\n  margin-top: ${(props) => props.marginTop || '10px'};\n  width: ${(props) => props.width || 'max-content'};\n  height: ${(props) => props.height || 'max-content'};\n  background: white;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  display: none;\n  &:after {\n    position: absolute;\n    top: -4px;\n    right: 22px;\n    content: '';\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-bottom: 5px solid white;\n  }\n\n  &:before {\n    position: absolute;\n    top: -5px;\n    right: 22px;\n    content: '';\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-bottom: 5px solid #dde2e6;\n  }\n\n  ${(props) =>\n    props.popoverPosition &&\n    props.popoverPosition === 'tabMenu' &&\n    css`\n      right: -110px;\n      &:before,\n      &:after {\n        right: 110px;\n      }\n    `}\n\n  ${(props) =>\n    props.popoverPosition &&\n    props.popoverPosition === 'variables' &&\n    css`\n      right: -5px;\n      &:before,\n      &:after {\n        right: 7px;\n      }\n      padding: 14px;\n      text-align: left;\n      font-size: 0.9rem;\n      width: 220px;\n      height: 70px;\n    `}\n\n  ${(props) =>\n    props.popoverPosition &&\n    props.popoverPosition === 'notification' &&\n    css`\n      top: auto;\n      bottom: 150%;\n      &:before {\n        bottom: -7px;\n        top: auto;\n        transform: rotate(180deg);\n      }\n      &:after {\n        bottom: -7px;\n        top: auto;\n        transform: rotate(180deg);\n      }\n    `}\n`;\n\nconst InputStyled = styled.input`\n  position: absolute;\n  top: 0px;\n  padding: 0;\n  margin: 0;\n  left: 0px;\n  width: 20px;\n  height: 20px;\n  opacity: 0;\n  cursor: pointer;\n  &:checked + ${PopoverStyled} {\n    display: block;\n    padding: 10px 0;\n  }\n`;\n\nexport const PopoverMenuItem = styled.div`\n  padding: 8px 15px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  ${(props) =>\n    props.disabled &&\n    css`\n      color: #aaa;\n    `}\n`;\n\nconst PopoverButton = ({ icon, content, marginTop, popoverPosition, popoverWidth, popoverHeight, autoHidden }) => {\n  return (\n    <Container>\n      <Button>{icon}</Button>\n      <InputStyled type=\"checkbox\" />\n      {autoHidden && <span className=\"autoHidden\" />}\n      <PopoverStyled marginTop={marginTop} popoverPosition={popoverPosition} width={popoverWidth} height={popoverHeight}>\n        {content}\n      </PopoverStyled>\n    </Container>\n  );\n};\n\nexport default PopoverButton;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useDispatch } from 'react-redux';\n\n// carbon icon\nimport CloseIcon from '@carbon/icons-react/es/close/16';\nimport MenuIcon from '@carbon/icons-react/es/overflow-menu--vertical/16';\n\n// components\nimport TabItemPopover from './TabItemPopover';\nimport PopoverButton from 'components/PopoverButton';\n\n// actions\nimport { switchTab, closeTab } from 'reducer/tabs.reducer';\n\nconst TabItem = ({ id, name, options, isActive }) => {\n  const dispatch = useDispatch();\n\n  const handleSetActiveTab = () => {\n    dispatch(switchTab(id));\n  };\n\n  const handleCloseTab = () => {\n    dispatch(closeTab(id));\n  };\n\n  return (\n    <TabItemContainerStyled isActive={isActive}>\n      <PopoverButton icon={<MenuIcon />} popoverHeight=\"auto\" content={<TabItemPopover tabId={id} options={options} />} popoverPosition=\"tabMenu\" />\n      <TabNameStyled onClick={handleSetActiveTab}>{name}</TabNameStyled>\n      <CloseIcon onClick={handleCloseTab} />\n    </TabItemContainerStyled>\n  );\n};\n\nexport default TabItem;\n\nconst TabItemContainerStyled = styled.div`\n  position: relative;\n  padding: 0 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-height: 50px;\n  height: 50px;\n  min-width: 150px;\n  background: white;\n  box-shadow: inset -10px -5px 25px 0px #d9ebfd;\n  cursor: pointer;\n\n  ${(props) =>\n    props.isActive &&\n    css`\n      box-shadow: 3px -8px 6px 5px #d9ebfd;\n      z-index: 10;\n    `}\n`;\n\nconst TabNameStyled = styled.div`\n  text-align: center;\n  flex-grow: 1;\n  align-self: normal;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// carbon icons\nimport AddIcon from '@carbon/icons-react/es/add/16';\n\n// actions\nimport { addTab } from 'reducer/tabs.reducer';\n\n// selectors\nimport { tabsSelector, activeTabIdSelector } from 'selectors/tabs.selector';\n\n// components\nimport TabItem from './TabItem';\n\nconst ChartTab = ({ children }) => {\n  const dispatch = useDispatch();\n  const tabs = useSelector(tabsSelector);\n  const activeTabId = useSelector(activeTabIdSelector);\n\n  const handleAddTab = () => {\n    dispatch(addTab());\n  };\n\n  return (\n    <Container>\n      <TabsContainer>\n        {tabs.map((tabItem) => (\n          <TabItem key={tabItem.id} id={tabItem.id} options={tabItem.options} name={tabItem.name} isActive={tabItem.id === activeTabId} />\n        ))}\n        <AddButton onClick={handleAddTab}>\n          <AddIcon />\n        </AddButton>\n      </TabsContainer>\n      <Content>{children}</Content>\n    </Container>\n  );\n};\n\nexport default ChartTab;\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  padding: 0 10px;\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n  z-index: 50;\n  box-shadow: inset 0px -5px 10px 0px #d9ebfd;\n  margin: 0 -10px;\n`;\n\nconst AddButton = styled.div`\n  min-width: 50px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  svg {\n    fill: var(--cds-icon-01, #161616);\n  }\n`;\n\nconst Content = styled.div`\n  flex-grow: 1;\n  z-index: 9;\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '@carbon/charts/styles.css';\n\nimport { PieChart } from '@carbon/charts-react';\n\n// selectors\nimport { chartSelector, chartValuesSelector, chartLabelsSelector } from 'selectors/chart.selector';\nimport { chartOptionTabSelector } from 'selectors/tabs.selector';\n\n// TODO: render pie chart \n\n// data of pie chart\n// const chartValues = [\n//   {\n//     group: 'Qty',\n//     value: 65000,\n//   },\n//   {\n//     group: 'More',\n//     value: 29123,\n//   },\n//   {\n//     group: 'Sold',\n//     value: 35213,\n//   },\n//   {\n//     group: 'Restocking',\n//     value: 51213,\n//   },\n//   {\n//     group: 'Misc',\n//     value: 16932,\n//   },\n// ];\n\nconst ChartCarbon = () => {\n  const chart = useSelector(chartSelector);\n  const chartOptionTab = useSelector(chartOptionTabSelector);\n  const chartValues = useSelector(chartValuesSelector);\n  const chartLabels = useSelector(chartLabelsSelector);\n\n  let options = {\n    legend: {\n      alignment: 'center',\n    },\n  };\n\n  const renderOption = () => {\n    if (chart.type === 'pie') {\n      options = {\n        ...options,\n        legend: {\n          ...options.legend,\n          enabled: chartOptionTab.options.legend,\n        },\n        tooltip: {\n          enabled: chartOptionTab.options.tooltip,\n          showTotal: chartOptionTab.options.tooltip,\n        },\n        pie: {\n          alignment: 'center',\n        },\n        height: '500px',\n        color: {\n          scale: {\n            ...chartLabels,\n          },\n        },\n      };\n    }\n\n    return options;\n  };\n\n  return <>{chart.type === 'pie' && <PieChart key={chartOptionTab.reRenderId} data={chartValues} options={renderOption()} />}</>;\n};\n\nexport default ChartCarbon;\n","import React from 'react';\n\n// components\nimport ChartTab from './ChartTab';\nimport ChartCarbon from './ChartCarbon';\n\nconst ChartCenterPanel = () => {\n  return (\n    <ChartTab>\n      <ChartCarbon />\n    </ChartTab>\n  );\n};\n\nexport default ChartCenterPanel;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// components\nimport CheckboxField from 'components/CheckboxField';\n\n// actions\n\nconst VariablePanel = ({ variables, selectedPlotted, handleToggleVariable, checkboxName }) => {\n  return (\n    <VariableStyled>\n      {variables.map((variable) => {\n        return (\n          <CheckboxField\n            key={variable.id}\n            id={`${checkboxName}-${variable.id.toString()}`}\n            defaultChecked={selectedPlotted[variable.id]}\n            labelText={variable.full_name}\n            onClick={() => handleToggleVariable(variable.id)}\n          />\n        );\n      })}\n    </VariableStyled>\n  );\n};\n\nexport default VariablePanel;\n\nconst VariableStyled = styled.div`\n  width: 100%;\n  height: 65vh;\n  overflow-y: auto;\n  color: #5a6872;\n  font-size: 14px;\n  margin: 20px 0 15px 0;\n  padding: 0 10px;\n\n  & > div + div {\n    margin-bottom: 5px;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\n// carbon core\nimport { Search, SelectItem } from 'carbon-components-react';\n\n// carbon icon\nimport CloseIcon from '@carbon/icons-react/es/close/16';\n\n// components\nimport VariableList from './VariableList';\nimport SelectField from 'components/SelectField';\n\n// actions\nimport { setFilter, resetFilter, togglePlottedVariable } from 'reducer/variables.reducer';\n\n// selector\nimport { variablesSelector, plottedVariablesSelector, selectedPlottedSelector } from 'selectors/variables.selector';\nimport { chartOptionTabSelector } from 'selectors/tabs.selector';\n\n/**\n * Represents our transaction sets & payload types\n * @constructor\n * @param {string} transactionType - transaction type for the payload\n * @param {string} x12 - x12 transaction set\n * @param {string} edifact - edifact transaction set\n * @param {string} xml - xml transactions paylod\n * @param {string} json - json transaction payload\n * TODO: enable other settings \n */\nconst types = ['all', 'x12', 'edifact'];\n\nconst VariablePanel = () => {\n  const dispatch = useDispatch();\n  const variables = useSelector(variablesSelector);\n  const plottedVariables = useSelector(plottedVariablesSelector);\n  const selectedPlotted = useSelector(selectedPlottedSelector);\n  const chartOptionTab = useSelector(chartOptionTabSelector);\n\n  const onSearch = (value) => {\n    if (value.trim() === '') {\n      dispatch(resetFilter());\n      return;\n\t\t}\n\t\t/** @event keywoard - search for a phrase */\n    dispatch(setFilter('keyword', value));\n  };\n\n  const onFilter = (e, type) => {\n    const { value } = e.target;\n    if (value === 'all') {\n      dispatch(resetFilter());\n      return;\n    }\n    dispatch(setFilter(type, e.target.value));\n  };\n\n  const handleToggleVariable = (variableId) => {\n    dispatch(togglePlottedVariable(variableId));\n  };\n\t\t/** value of @param\t{string} transactionType defined above  */\n  return (\n    <ContainerStyled>\n      <HeaderStyled> \n\t\t\n        <span>Transaction Types</span>\n        <IconStyled>\n          <CloseIcon fill=\"var(--cds-text-02,#525252)\" />\n        </IconStyled>\n      </HeaderStyled>\n\n      <FilterStyled>\n        <SelectField id=\"select-variables-step\" labelText=\"Type\" width=\"40%\" onChange={(e) => onFilter(e, 'step')}>\n          {types.map((step, idx) => (\n            <SelectItem key={idx} value={step} text={step} />\n          ))}\n        </SelectField>\n      </FilterStyled>\n      <br />\n\n      <Search labelText=\"\" placeHolderText=\"Search\" light onChange={(e) => onSearch(e.target.value)} />\n\n      <VariableList\n        key={chartOptionTab.id}\n        variables={variables}\n        plottedVariables={plottedVariables}\n        selectedPlotted={selectedPlotted}\n        handleToggleVariable={handleToggleVariable}\n        checkboxName=\"variable-panel-checkbox\"\n      />\n    </ContainerStyled>\n  );\n};\n\nexport default VariablePanel;\n\nconst ContainerStyled = styled.div`\n  flex: 0 0 430px;\n  height: 100%;\n  padding: 20px 15px 0;\n  background: #ffffff 0% 0% no-repeat padding-box;\n  box-shadow: 2px 2px 10px #d9ebfd;\n  z-index: 1;\n`;\n\nconst HeaderStyled = styled.div`\n  position: relative;\n  text-align: center;\n  text-transform: capitalize;\n  color: #5a6872;\n  padding-bottom: 30px;\n`;\n\nconst IconStyled = styled.div`\n  position: absolute;\n  left: 10px;\n  top: 0;\n  cursor: pointer;\n`;\n\nconst FilterStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// components\nimport ControlCenterPanel from './ControlCenterPanel';\nimport ChartCenterPanel from './ChartCenterPanel';\nimport VariablePanel from './VariablePanel';\n\n// actions\nimport { fetchVariables } from 'reducer/variables.reducer';\nimport { fetchChart } from 'reducer/chart.reducer';\n\nconst ChartEditor = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchVariables(9));\n    dispatch(fetchChart());\n  }, [dispatch]);\n\n  return (\n    <div className=\"chartEditor\">\n      <ControlCenterPanel />\n      <ChartCenterPanel />\n      <VariablePanel />\n    </div>\n  );\n};\n\nexport default ChartEditor;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function Heading({ text }) {\n  return <ContainerStyled>{text}</ContainerStyled>;\n}\n\nconst ContainerStyled = styled.div`\n  position: relative;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.25;\n  -webkit-letter-spacing: normal;\n  -moz-letter-spacing: normal;\n  -ms-letter-spacing: normal;\n  letter-spacing: normal;\n  text-align: left;\n  color: var(--cds-text-02, #525252);\n  margin-right: 35px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// components\nimport Heading from './Heading';\n\nexport default function Header() {\n  return (\n    <HeaderStyled>\n      <HeaderLogo>\n        <Heading text=\"Freight Trust AS2/EDI Network\" />\n      </HeaderLogo>\n    </HeaderStyled>\n  );\n}\n\nconst HeaderStyled = styled.div`\n  height: 67px;\n  display: flex;\n  align-items: center;\n  background: #ffffff 0% 0% no-repeat padding-box;\n  box-shadow: 0px 2px 10px #d9ebfd;\n`;\n\nconst HeaderLogo = styled.div`\n  padding-left: 5.5px;\n  padding-right: 5.5px;\n  margin-right: 25px;\n  display: flex;\n  align-items: center;\n  color: #5a6872;\n  img {\n    width: 42px;\n    height: 46px;\n    margin-right: 10px;\n  }\n`;\n","import React from 'react';\n\n// module\nimport ChartEditor from 'modules/ChartEditor';\n\n// components\nimport Header from 'components/Header';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <main>\n          <ChartEditor />\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport * as serviceWorker from './serviceWorker';\n\n// styles\nimport 'carbon-components/css/carbon-components.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\n\n// store\nimport store from 'store';\n\n// modules\nimport App from './App';\n\ntoast.configure();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// request.defaults.baseURL = user.profile.endpoint || process.env.REACT_APP_BACKEND_URL;\n\n// dispatch(appAction.setLoadingMessage('(2/3) Authorizing IDF API'));\n// request.defaults.headers.common = {\n//   // eslint-disable-next-line\n//   get ['X-Auth-Token']() {\n//     return user.access_token;\n//   },\n// };\nserviceWorker.unregister();\n"],"sourceRoot":""}